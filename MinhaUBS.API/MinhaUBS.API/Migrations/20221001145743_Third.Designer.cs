// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinhaUBS.API.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MinhaUBS.API.Migrations
{
    [DbContext(typeof(MinhaUBSContext))]
    [Migration("20221001145743_Third")]
    partial class Third
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("MinhaUBS.API.Models.Funcionario", b =>
                {
                    b.Property<int>("ID_Funcionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Especialidade")
                        .HasColumnType("text");

                    b.Property<string>("Login")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<string>("Senha")
                        .HasColumnType("text");

                    b.Property<int?>("UnidadeID_Unidade")
                        .HasColumnType("integer");

                    b.HasKey("ID_Funcionario");

                    b.HasIndex("UnidadeID_Unidade");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("MinhaUBS.API.Models.Servico", b =>
                {
                    b.Property<int>("ID_Servico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("ID_Servico");

                    b.ToTable("Servico");
                });

            modelBuilder.Entity("MinhaUBS.API.Models.Unidade", b =>
                {
                    b.Property<int>("ID_Unidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("Ativa")
                        .HasColumnType("boolean");

                    b.Property<string>("Endereco")
                        .HasColumnType("text");

                    b.Property<string>("Localizacao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("ID_Unidade");

                    b.ToTable("Unidade");
                });

            modelBuilder.Entity("MinhaUBS.API.Models.Vacina", b =>
                {
                    b.Property<int>("ID_Vacina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("ID_Vacina");

                    b.ToTable("Vacina");
                });

            modelBuilder.Entity("ServicoUnidade", b =>
                {
                    b.Property<int>("ServicosID_Servico")
                        .HasColumnType("integer");

                    b.Property<int>("UnidadesID_Unidade")
                        .HasColumnType("integer");

                    b.HasKey("ServicosID_Servico", "UnidadesID_Unidade");

                    b.HasIndex("UnidadesID_Unidade");

                    b.ToTable("ServicoUnidade");
                });

            modelBuilder.Entity("UnidadeVacina", b =>
                {
                    b.Property<int>("UnidadesID_Unidade")
                        .HasColumnType("integer");

                    b.Property<int>("VacinasID_Vacina")
                        .HasColumnType("integer");

                    b.HasKey("UnidadesID_Unidade", "VacinasID_Vacina");

                    b.HasIndex("VacinasID_Vacina");

                    b.ToTable("UnidadeVacina");
                });

            modelBuilder.Entity("MinhaUBS.API.Models.Funcionario", b =>
                {
                    b.HasOne("MinhaUBS.API.Models.Unidade", "Unidade")
                        .WithMany("Funcionarios")
                        .HasForeignKey("UnidadeID_Unidade");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("ServicoUnidade", b =>
                {
                    b.HasOne("MinhaUBS.API.Models.Servico", null)
                        .WithMany()
                        .HasForeignKey("ServicosID_Servico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhaUBS.API.Models.Unidade", null)
                        .WithMany()
                        .HasForeignKey("UnidadesID_Unidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UnidadeVacina", b =>
                {
                    b.HasOne("MinhaUBS.API.Models.Unidade", null)
                        .WithMany()
                        .HasForeignKey("UnidadesID_Unidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MinhaUBS.API.Models.Vacina", null)
                        .WithMany()
                        .HasForeignKey("VacinasID_Vacina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MinhaUBS.API.Models.Unidade", b =>
                {
                    b.Navigation("Funcionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
